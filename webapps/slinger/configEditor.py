import daemon.GlobalFuncs as GFimport daemon.HTTPDaemon  as HTTPDaemonself          = eval('self')output        = self.outputcfg           = GF.ConfigincludedFiles = cfg.includedFiles.copy()includedFiles.reverse()self.do_HEAD(turnOffCache=True)# Get request parameterspostData = self.getCGIParametersFormData ()if 'action' in list(postData.keys()):    # Send config file    if postData['action'].lower() == 'read':        if 'inclfileid' not in list(postData.keys()): postData['inclfileid'] = '0'        fidx = int(postData['inclfileid'])        file = open(includedFiles[fidx], 'rb')        output(file.read())        file.close()        exit(0)    # Save config file    if postData['action'].lower() == 'save':        if ('config', 'inclfileid' in list(postData.keys())):            fidx = int(postData['inclfileid'])            file = open(includedFiles[fidx], 'wb')            file.write(postData['config'].encode('utf-8'))            file.close()            output ("SUCCESS: Save completed!")        else:            output ("ERROR: Missing config parameter!")        exit(0)    if postData['action'].lower() == 'restart_daemon':        GF.DaemonRunningState = GF.DAEMON_RUNMODE_RESTART        HTTPDaemon.stopDaemon()        exit(0)    if postData['action'].lower() == 'daemon_running':        output ('ok')        exit(0)# =======================================================# Load Ace Editoroutput ('''<!DOCTYPE html><html lang="en"><head><meta name="viewport" content="width=device-width, initial-scale=1.0" charset="utf-8" />	    <link rel="stylesheet" href="jquery-ui/jquery-ui.css">         <script src="jquery-ui/jquery-3.7.1.js"></script>    <script src="jquery-ui/jquery-ui.js"></script>    <script type="text/javascript" src="jquery-toast/jquery.toast.js"></script>    <link rel="stylesheet" href="jquery-toast/jquery.toast.css">	<link rel="stylesheet" href="fontawesome/css/all.css" />    <link rel="stylesheet" href="css/pure-button.css">    <link rel="stylesheet" href="css/buttons.css">						        <style type="text/css" media="screen">        #editor {            position: absolute;            top: 0px;            right: 0;            bottom: 0;            left: 0;        }    </style>    <script src="editor/ace/ace.js" type="text/javascript" data-ace-base="ace" charset="utf-8"></script>    <script src="editor/ace_grammar.js"></script>    <script src="editor/grammars/render4Monitor.js"></script>    <script src="editor/ace_grammar_loader.js"></script></head><body><!- #### Display spinner/busy animation while saving #### --><div class="PacifierModal"></div><div id="editToolbar" class="button-xsmall ConfigEditorToolbar"><fieldset class="AdminControlFieldSet">    <!-- TODO : Do an Ajax call in future with a delay for web site response -->''')# Append the include file listoutput ('''    <label for="inclfileid">File:</label>    <select id="inclfileid" style="width:180px" size="1" class="" onchange="javascript:loadConfig ();">''')fidx = 0if 'inclfileid' not in list(postData.keys()): postData['inclfileid'] = '0'for f in includedFiles:    output ('<option value="' + str(fidx) + '" ' + ('selected' if str(fidx) == postData['inclfileid'] else '') + '>' + f + '</option>\n')    fidx += 1output ('</select>\n')output ('''    <button id="saveBut"        title="Save Config"                  class="pure-button button-start"   onclick="javascript:saveConfig (false);"><i class="fa fa-floppy-o fa-IconSpLeft"></i><b>S</b>ave</button>    <button id="saveRestartBut" title="Save Config & Restart Daemon" class="pure-button button-warning" onclick="javascript:saveConfig (true);"><i class="fa fa-floppy-o fa-IconSpLeft"></i><b>S</b>ave & <b>R</b>estart</button>    <button title="Load Config"                  class="pure-button button-filter" onclick="javascript:loadConfig ();"><i class="fa fa-download fa-IconSpLeft"></i><b>L</b>oad</button></fieldset><fieldset class="AdminControlFieldSet">    <label for="selTheme">Syntax Style:</label>    <select id="selTheme" style="width:180px" size="1" class="">        <optgroup label="Bright">            <option value="ace/theme/chrome">Chrome</option>            <option value="ace/theme/clouds">Clouds</option>            <option value="ace/theme/crimson_editor">Crimson Editor</option>            <option value="ace/theme/dawn">Dawn</option>            <option value="ace/theme/dreamweaver">Dreamweaver</option>            <option value="ace/theme/eclipse">Eclipse</option>            <option value="ace/theme/github">GitHub</option>            <option value="ace/theme/solarized_light">Solarized Light</option>            <option value="ace/theme/textmate">TextMate</option>            <option value="ace/theme/tomorrow">Tomorrow</option>            <option value="ace/theme/xcode">XCode</option>            <option value="ace/theme/kuroir">Kuroir</option>            <option value="ace/theme/katzenmilch">KatzenMilch</option>        </optgroup>        <optgroup label="Dark">            <option value="ace/theme/ambiance">Ambiance</option>            <option value="ace/theme/chaos">Chaos</option>            <option value="ace/theme/clouds_midnight">Clouds Midnight</option>            <option value="ace/theme/cobalt">Cobalt</option>            <option value="ace/theme/idle_fingers">idle Fingers</option>            <option value="ace/theme/kr_theme">krTheme</option>            <option value="ace/theme/merbivore">Merbivore</option>            <option value="ace/theme/merbivore_soft">Merbivore Soft</option>            <option value="ace/theme/mono_industrial">Mono Industrial</option>            <option value="ace/theme/monokai">Monokai</option>            <option value="ace/theme/pastel_on_dark">Pastel on dark</option>            <option value="ace/theme/solarized_dark">Solarized Dark</option>            <option value="ace/theme/terminal">Terminal</option>            <option value="ace/theme/tomorrow_night">Tomorrow Night</option>            <option value="ace/theme/tomorrow_night_blue">Tomorrow Night Blue</option>            <option value="ace/theme/tomorrow_night_bright">Tomorrow Night Bright</option>            <option value="ace/theme/tomorrow_night_eighties">Tomorrow Night 80s</option>            <option value="ace/theme/twilight">Twilight</option>            <option value="ace/theme/vibrant_ink" selected="selected">Vibrant Ink</option>        </optgroup>    </select>    <label for="selFontsize">Font Size:</label>    <select id="selFontsize" style="width:50px" size="1" class="">      <option value="10px">10px</option>      <option value="11px">11px</option>      <option value="12px">12px</option>      <option value="13px">13px</option>      <option value="14px" selected="selected">14px</option>      <option value="16px">16px</option>      <option value="18px">18px</option>      <option value="20px">20px</option>      <option value="24px">24px</option>    </select>    <button title="Find Text (ctrl+f)"                             class="pure-button button-direction" onclick="javascript:aceEditor.execCommand('find');"><i class="fa fa-search fa-IconSpLeft"></i><b>F</b>ind</button>    <button title="Find/Repace (ctrl+h)"                           class="pure-button button-direction" onclick="javascript:aceEditor.execCommand('replace');"><i class="fa fa-refresh fa-IconSpLeft"></i><b>R</b>eplace</button>    <button title="Show/Hide Control Chars"     id="invBut"        class="pure-button button-direction" onclick="javascript:ShowInvisibles();"><i class="fa fa-eye"></i></button></fieldset><div style="line-height:2px;">&nbsp;</div><div id="editor"></div><script>var aceEditor      = null;var dispInvChars   = false;var logWindow      = null;var restartProcess = ''; // values 'init', 'saved', 'error'function ShowInvisibles (){    dispInvChars = ! dispInvChars;    $('#invBut').toggleClass('pure-button-active');    aceEditor.setShowInvisibles(dispInvChars);    aceEditor.focus();}var drdInterrupt = null;function delayTestServer (times){    $(".PacifierModal").html('<center><h2>Please Wait : Testing if Server Alive : Attempt ' + times  + '</h2></center>');    $.ajax({            url: "configEditor.py?action=daemon_running",            type: 'GET',                        dataType: 'text',            async: true,            success: function (result)            {                                $("body").removeClass("busy");                window.parent.location.reload();            },            error: function (jqXHR, textStatus, errorThrown)            {                delayTestServer (times+1);            }          });}function delayRestartServer (){    if (restartProcess == 'init')        return;    clearInterval(drdInterrupt);    drdInterrupt = null;    if (restartProcess != 'saved')        return;    $(".PacifierModal").html('<center><h2>Please Wait : Restarting Server</h2></center>');    $("body").addClass("busy");    $.ajax({            url: "configEditor.py?action=restart_daemon",            type: 'GET',                        dataType: 'text',            async: true,            success: function (result)            {                // delay the test in case its slow to shutdown/restart ...                setTimeout(function ()                {                    delayTestServer (1);                }, 5000);            },            error: function (jqXHR, textStatus, errorThrown)            {                // delay the test in case its slow to shutdown/restart ...                setTimeout(function ()                {                    delayTestServer (1);                }, 5000);            }          });}function saveConfig (restartServer){    if (restartServer)    {        restartProcess = 'init';        drdInterrupt = setInterval (delayRestartServer, 500);    }    var postData = {action:"save", config: aceEditor.getSession().getValue(), inclfileid:$("#inclfileid").val()};    $.ajax({url:        "configEditor.py",            dataType:   'text',            type:       'POST',            data :      postData,            success:    function(result)                        {                            var re = /success/i;                            if (re.exec(result))                            {                                restartProcess = 'saved';                                aceEditor.session.getUndoManager().markClean();                            }                            else                            {                                restartProcess = 'error';                            }                            $.toast({                                heading: 'info',                                text: result,                                icon: 'info'                            });                                               }          });    return false;}function loadConfig (){    if (! aceEditor.session.getUndoManager().isClean())    {        if (! confirm('Ignore change to this configuration?'))            return;    }    $.ajax({url:        "configEditor.py",            type:       'POST',            data: {                "action"     : "read",                "inclfileid" :  $("#inclfileid").val()            },                                    dataType:   'text',            success:    function(result)                        {                            aceEditor.session.setValue(result);                            aceEditor.moveCursorTo (0,0);                            aceEditor.session.getUndoManager().markClean();                        }          });}$(document).ready(function(){    aceEditor = ace_grammar_loader("editor/ace", "editor", render4Monitor_grammarDefinition);    aceEditor.setTheme($('#selTheme').val());    aceEditor.setFontSize($("#selFontsize").val());    aceEditor.setShowPrintMargin(false);    aceEditor.session.setNewLineMode("unix");    loadConfig ();    // *** set selection object event handlers ***    $("#selTheme").change(function()    {        aceEditor.setTheme($( this ).val());        aceEditor.focus();    });    $("#selFontsize").change(function()    {        aceEditor.setFontSize($( this ).val());        aceEditor.focus();    });    $('#editor').css( 'top', $("#editToolbar").get(0).scrollHeight+'px');});</script></body></html>''')