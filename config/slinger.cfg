[slinger]
    # ---- Database Settings ----
    DB_FILENAME=./config/slinger.db
    DB_VERSION=1.0
    # max time in seconds: 10 minutes
    DB_SQLEXEC_MAXTIME=600
    # max time in milli-seconds: 30 seconds
    DB_SQLLOCK_MAXTIME=30000

    # album art folder name
    ALBUM_ART_FILENAME=folder.jpg
    ALBUM_ART_FILENAME=folder.png
    ALBUM_ART_FILENAME=cover.jpg
    ALBUM_ART_FILENAME=cover.png
    ALBUM_ART_FILENAME=album.png
    ALBUM_ART_FILENAME=album.jpg
    ALBUM_ART_FILENAME=front.jpg
    ALBUM_ART_FILENAME=front.png

    # album art work, matches are case insensitive
    MATCH_ART_IMAGE_REGEXP=.*\.jpg
    MATCH_ART_IMAGE_REGEXP=.*\.png
    MATCH_ART_MAX_SCAN_DEPTH=2

    # supported chromecast file type extension :: and mime/content type sent to chromecast device
    MATCH_MUSIC_TYPE=flac::audio/flac
    MATCH_MUSIC_TYPE=mp3::audio/mp3
    MATCH_MUSIC_TYPE=ogg::audio/ogg
    MATCH_MUSIC_TYPE=wav::audio/wav
    MATCH_MUSIC_TYPE=webm::audio/opus
    MATCH_MUSIC_TYPE=opus::audio/opus
    MATCH_MUSIC_TYPE=oga::audio/opus
    MATCH_MUSIC_TYPE=aac::audio/aac
    MATCH_MUSIC_TYPE=aacp::audio/aac
    MATCH_MUSIC_TYPE=3gpp::audio/aac
    MATCH_MUSIC_TYPE=3gpp2::audio/aac
    MATCH_MUSIC_TYPE=m4a::audio/aac

    # dynamic transcoding
    MATCH_MUSIC_TYPE=dsf::audio/transcode
    MATCH_MUSIC_TYPE=wv::audio/transcode

   	# transcode formats using ffmpeg
	TC_FFMPEG_AUDIO_FORMAT=s32
	TC_FFMPEG_AUDIO_FREQ=96000
    TC_FFMPEG_AUDIO_OUT_FORMAT=flac

    # extra parameter used in audio
 	TC_FFMPEG_OTHER_AUDIO_CFG=-af
    TC_FFMPEG_OTHER_AUDIO_CFG="lowpass=24000, volume=6dB"
    TC_FFMPEG_OTHER_AUDIO_CFG=-compression_level
    TC_FFMPEG_OTHER_AUDIO_CFG=0

    # Override ffmpeg executable location
    #TC_FFMPEG_EXE_OVERRIDE=
    #TC_FFMPEG_EXE_OVERRIDE=.\ffmpeg\bin\ffmpeg.exe
    #TC_FFMPEG_EXE_OVERRIDE=c:\ffmpeg\bin\ffmpeg.exe
    #TC_FFMPEG_EXE_OVERRIDE=/usr/bin/ffmpeg

    # Transcoding file cache location.
    # This location will store previous transcoded files up to a specified directory usage,
    # then if will purge previous cached file based upon least recently used algorithm
    #TC_CACHE_LOCATION=d:\ffmpeg_cache
    TC_CACHE_LOCATION=

    # accepted formats are: nKB, nMB, nGB, nTB
    # examples : 100GB == 100 Gigabytes to limit size of cache
    #              2TB ==   2 Terabytes to limit size of cache
    TC_CACHE_MAX_SIZE=10GB

    # Override temp file creating (i.e them in an RAM drive for fast I/O), by default its your OS Temp location.
    # example:
    #     mount -o size=1G -t tmpfs none /mnt/tmpfs
    # TEMP_FILE_LOCATION=/mnt/tmpfs
    TEMP_FILE_LOCATION=

    # how long to cache chrome cast device info before re-query device info in seconds.
    CHROMECAST_CACHE_TIMEOUT=((60 * 60) * 24) * 365

    # number of secs to wait after chromecast is not longer playing to go to sleep.chromecast.
    QUEUE_PROCESS_ACTIVE_BEFORE_SLEEP=60 * 2

    # number of secs to remain a asleep waiting for an awake signal
    QUEUE_PROCESS_SLEEP_BEFORE_WAKE=((60 * 60) * 24) * 365

    # if you have alot of folders over an SMB link with alot of art,
    # then disable this feature to prevent navigation lag
    LOAD_FILE_LIST_FOLDER_ART_ICONS=true

    # if the song seek position fails to work, then you can disable
    # it with this option.
    DISABLE_SONG_SEEK=true

    # accepted formats using:
    #   <username/password>::UNC Path
    #   UNC Path \\server\Share\filename
    SMB_MUSIC_UNCPATH=::\\192.168.20.14\MediaServer\Music
    SMB_MUSIC_UNCPATH=::\\192.168.20.23\ExtUSB-4TB\music
    FILE_MUSIC_PATH=D:\music\
    #FILE_MUSIC_PATH=/mnt/MediaServer/Music/

    SEARCH_RESULT_LIMIT=1000

    # Set the max concurrent downloads for accessfile.py
    MAX_CONCURRENT_DOWNLOADS=20

    # Scraper Schedular
    # Time to scrape in cron format
    # * * * * *
    # | | | | |
    # | | | | day of the week (0–6) (Sunday to Saturday;
    # | | | month (1–12)             7 is also Sunday on some systems)
    # | | day of the month (1–31)
    # | hour (0–23)
    # minute (0–59)
    #SCRAPER_EVENT_TIME=0 23 * * *

